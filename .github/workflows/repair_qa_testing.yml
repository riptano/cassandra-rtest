name: Cassandra Repair Quality Testing
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  integration-tests:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.4.1
      with:
          ssh-private-key: ${{ secrets.TLP_CLUSTER_KEY }}
    - name: Install dependencies
      shell: bash
      run: |
          sudo apt-get update
          sudo apt-get install openjdk-8-jre openjdk-8-jdk -y
          sudo dpkg -i "./dependencies/tlp-cluster_0.7~SNAPSHOT_all.deb"
          mkdir -p /home/runner/.tlp-cluster/profiles/default

          sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y
          sudo usermod -aG docker ${USER}
          sudo apt-get install ant -y
          # No clue why we need to pull these manually now...
          docker pull hashicorp/terraform:0.11.14
          docker pull thelastpickle/pssh:1.0
          docker pull thelastpickle/cassandra-build:1.0
    - name: Build Cassandra trunk
      shell: bash
      if: ${{ success() }}
      run: |
          git clone https://github.com/apache/cassandra.git
          cd cassandra
          ant build
    - name: Configure tlp-cluster
      if: ${{ success() }}
      env:
        TLP_CLUSTER_KEY: ${{ secrets.TLP_CLUSTER_KEY }}
        TLP_CLUSTER_SETTINGS: ${{ secrets.TLP_CLUSTER_SETTINGS }}
      run: |
          set -e
          if [[ -n "${TLP_CLUSTER_KEY}" ]];
          then
            printf "%s" "${TLP_CLUSTER_SETTINGS}" > /home/runner/.tlp-cluster/profiles/default/settings.yaml
            printf "%s" "${TLP_CLUSTER_KEY}" > /home/runner/.tlp-cluster/profiles/default/secret.pem
          fi
          chmod 600 /home/runner/.tlp-cluster/profiles/default/secret.pem

    - name: Spin up cluster
      if: ${{ success() }}
      shell: bash
      run: |
          echo "Initializing AWS cluster..."
          timeout --foreground 120 tlp-cluster init CASS CASSANDRA-15580 "4.0 repair quality testing" -c 3 --instance m5ad.xlarge > /dev/null 2>&1
          echo "Spinning up EC2 instances..."
          timeout --foreground 120 tlp-cluster up --auto-approve > /dev/null 2>&1
          # tlp-cluster build isn't working anymore. We have to use existing packages until we fix this.
          timeout --foreground 180 tlp-cluster use 4.0~alpha4 --config "cluster_name:repair_quality" > /dev/null 2>&1
          # Allow external JMX access
          sed -i '1s/^/LOCAL_JMX=no\n/' provisioning/cassandra/conf/cassandra-env.sh
          sed -i 's/com.sun.management.jmxremote.authenticate=true/com.sun.management.jmxremote.authenticate=false/' provisioning/cassandra/conf/cassandra-env.sh
          echo "Installing packages..."
          timeout --foreground 600 tlp-cluster install > install.log 2>&1 || echo "meh... install phase seem to have failed" > /dev/null 2>&1
          echo "Starting Cassandra..."
          timeout --foreground 600 tlp-cluster start > start.log 2>&1 || echo "meh... start phase seem to have failed" > /dev/null 2>&1

    - name: Check if test scenarios can run
      if: ${{ success() }}
      run: |
        shopt -s expand_aliases || setopt aliases
        source env.sh
        env
        CLUSTER_KIND=aws mvn test -Dcucumber.filter.tags="@DryRun"

#    - name: Run test scenarios
#      if: ${{ success() }}
#      run: |
#          shopt -s expand_aliases || setopt aliases
#          source env.sh
#          CLUSTER_KIND=aws mvn test -Dcucumber.filter.tags="@Full"

    - name: Tear down
      if: ${{ always() }}
      run: |
          echo "Terminating instances, please be patient..."
          timeout --foreground 600 tlp-cluster down --auto-approve > down.log 2>&1
          tail -10 down.log

